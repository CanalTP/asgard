pipeline {
    agent any
    parameters { 
        string(name: 'branch_name', defaultValue: 'master', description: 'branch name')
        string(name: 'registry_intern', defaultValue: 'docker-registry.canaltp.fr', description: 'registry intern')
    }
    stages {
        stage('Remove navitia/asgard-build-deps images') {
            steps {
                sh "make remove-build-deps-image"
            }
        } 
        stage('Build App Image') {
            steps {
                sh 'echo "Build with branch name" ${branch_name}'
                sh "git fetch --tags"
                sh "make build-app-image-${branch_name} TAG=`make get-app-${params.branch_name}-tag`"
            }
        }
        stage('Docker Login') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'core-ci-registry-access', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh "make docker-login DOCKERHUB_USER=${USERNAME} DOCKERHUB_PWD=${PASSWORD} REGISTRY_HOST=${params.registry_intern}"
                }
            }
        }
        stage('Tag release as latest and push it') {
            when {
                expression { params.branch_name == 'release' }
            }
            steps {
                sh "docker tag navitia/asgard-app:`make get-app-${branch_name}-tag` navitia/asgard-app:latest"
                sh "docker push navitia/asgard-app:latest"
            }
        }
	stage('Push Asgard App Image to Intern') {
	    steps {
		sh "echo 'Push docker with tag:' \"${params.registry_intern}\""
		sh "make push-app-image TAG=`make get-app-${branch_name}-tag` REGISTRY_HOST=${params.registry_intern}"
	    }
	}
        stage('Remove useless images') {
            steps {
                sh "make wipe-useless-images"
            }
        }
    }
    post {
        always {         
            deleteDir()
        }
        failure {
            withCredentials([string(credentialsId: 'navitia_core_team_slack_chan', variable: 'NAVITIA_CORE_TEAM_SLACK_CHAN')]) {
                sh '''
                    curl -X POST -H 'Content-type: application/json' --data '{"text":":warning: Asgard app docker failed. See https://jenkins-core.canaltp.fr/job/build-asgard-app/"}' $NAVITIA_CORE_TEAM_SLACK_CHAN
                '''
            }
        }
    }
}
